# Generated by Django 3.1.5 on 2021-02-10 10:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalIngridient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Дополнительный ингридиент')),
                ('image', models.ImageField(blank=True, upload_to='items/ingridients/', verbose_name='Изображение')),
                ('is_for_pizza', models.BooleanField(default=False, verbose_name='Для пиццы?')),
                ('is_for_meat', models.BooleanField(default=False, verbose_name='Для шашлыка?')),
                ('is_added', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Дополнительный ингридиент',
                'verbose_name_plural': 'Дополнительные ингридиенты',
            },
        ),
        migrations.CreateModel(
            name='BaseIngridient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Базовый ингридиент')),
                ('is_for_pizza', models.BooleanField(default=False, verbose_name='Для пиццы?')),
                ('is_for_meat', models.BooleanField(default=False, verbose_name='Для шашлыка?')),
                ('is_can_removed', models.BooleanField(default=False, verbose_name='Может быть удален?')),
                ('is_removed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Базовый ингридиент',
                'verbose_name_plural': 'Базовые ингридиенты',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название категории')),
                ('name_slug', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('is_pizza', models.BooleanField(default=False, verbose_name='Это пицца?')),
                ('is_meat', models.BooleanField(default=False, verbose_name='Это шашлык?')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='Город')),
                ('info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Информация о достаке')),
                ('is_main', models.BooleanField(default=False, verbose_name='Это город по умолчанию?')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название товара')),
                ('image', models.ImageField(upload_to='items/', verbose_name='Изображение')),
                ('unit_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Еденица изверения товара')),
                ('min_unit', models.IntegerField(null=True, verbose_name='Минимальное количество')),
                ('discount', models.IntegerField(default=0, verbose_name='Скидка')),
                ('weight', models.IntegerField(default=0, verbose_name='Вес (для пиццы это вес 22см)')),
                ('is_recommended', models.BooleanField(default=False, verbose_name='Рекомендуемый товар?')),
                ('is_for_meat', models.BooleanField(default=False, verbose_name='Рекомендуемый товар для шашлыка?')),
                ('is_new', models.BooleanField(db_index=True, default=False, verbose_name='Товар новинка ?')),
                ('buys', models.IntegerField(default=0, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('additional_ingridients', models.ManyToManyField(blank=True, to='items.AdditionalIngridient', verbose_name='Дополнительные ингридиенты')),
                ('base_ingridients', models.ManyToManyField(blank=True, to='items.BaseIngridient', verbose_name='Базовые ингридиенты')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='items.category', verbose_name='Категория')),
                ('city', models.ManyToManyField(blank=True, db_index=True, to='items.City', verbose_name='Продукт доступен в городах')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Souce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название соуса')),
                ('image', models.ImageField(upload_to='items/', verbose_name='Изображение')),
                ('city', models.ManyToManyField(blank=True, db_index=True, to='items.City', verbose_name='Соус доступен в городах')),
            ],
            options={
                'verbose_name': 'Соус',
                'verbose_name_plural': 'Соусы',
            },
        ),
        migrations.CreateModel(
            name='SoucePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(null=True, verbose_name='Цена')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='items.city', verbose_name='Город')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='items.souce', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Цена на соус',
                'verbose_name_plural': 'Цены на соусы',
            },
        ),
        migrations.CreateModel(
            name='ItemPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(null=True, verbose_name='Цена (если пицца то для размера 22см)')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='items.city', verbose_name='Город')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='items.item', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Цена на товар',
                'verbose_name_plural': 'Цены на товары',
            },
        ),
        migrations.CreateModel(
            name='AdditionalIngridientPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(null=True, verbose_name='Цена')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='items.city', verbose_name='Город')),
                ('ingridient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price', to='items.additionalingridient', verbose_name='Дополнительный ингридиент')),
            ],
            options={
                'verbose_name': 'Цена на дополнительный ингридиент',
                'verbose_name_plural': 'Цены на дополнительные ингридиенты',
            },
        ),
    ]
